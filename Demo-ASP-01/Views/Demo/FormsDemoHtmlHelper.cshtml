@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Demo_ASP_01.Models.Demo
@model FormsDemoForm

@{
    List<SelectListItem> titleItems = new List<SelectListItem>(){
                new SelectListItem() {Value = "none", Text="Pas de titre"},
                new SelectListItem() {Value = "mme", Text="Mme"},
                new SelectListItem() {Value = "mr", Text="Mr"},
                new SelectListItem() {Value = "dr", Text="Dr"}
                    };
}
<!DOCTYPE html>
<html lang="fr">
<head>
    <title>Demo ASP MVC : @ViewData["Title"]</title>
    <link rel="stylesheet" type="text/css" href="/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" type="text/css" href="/css/site.css"/>
</head>
<body>
    <h1>Demo ASP MVC</h1>
    @if(TempData.ContainsKey("errorMessage")){
        <div style="background-color : #FF7777; color : #880000">
            <p>@TempData["errorMessage"]</p>
        </div>
    }
    @if(!ViewContext.ModelState.IsValid){
        @Html.ValidationSummary(true,
                         $"Votre formulaire contient {ViewContext.ModelState.ErrorCount} erreur(s) :",
                         new { @class = "alert alert-danger", style = "width : 75%; margin : 0 auto"}
                 )
    }
    <h2>Démonstrations des formulaires</h2>
    <div class="row">
        @using (Html.BeginForm(FormMethod.Post, new { @class = "col-6 container-md" }))
        {
            <div class="mb-3">
                @Html.LabelFor(m => m.Title, new { @class="form-label" })
                @Html.DropDownListFor( m => m.Title,
                    titleItems,
                    null, 
                    new { @class="form-select"}
                    )
                @Html.ValidationMessageFor(m => m.Title, null, new {@class = "text-danger"})
            </div>
            <div class="mb-3">
                @Html.LabelFor(m => m.FirstName, new { @class = "form-label" })
                @Html.EditorFor(m => m.FirstName, new{ htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(m => m.FirstName, null, new {@class = "text-danger"})
            </div>
            <div class="mb-3">
                @Html.LabelFor(m => m.LastName, new { @class="form-label" })
                @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control"}})
                @Html.ValidationMessageFor(m => m.LastName, null, new {@class = "text-danger"})
            </div>
            <div class="mb-3">
                @Html.LabelFor(m => m.BirthDate, new { @class="form-label" })
                @Html.EditorFor(m => m.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.BirthDate, "Le champ Date de naissance est invalide", new { @class = "text-danger" })
            </div>
        <div class="btn-group">
            <button type="submit" class="btn btn-success">Enregistrer</button>
            <button type="reset" class="btn btn-warning">Vider formulaire</button>
            @Html.ActionLink("Revenir en arrière", "Index", "Demo", null, new { @class = "btn btn-danger" })
        </div>
    }
    </div>
</body>
</html>
